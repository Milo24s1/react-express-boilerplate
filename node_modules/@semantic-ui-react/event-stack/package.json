{
  "_args": [
    [
      {
        "raw": "@semantic-ui-react/event-stack@^2.0.0",
        "scope": "@semantic-ui-react",
        "escapedName": "@semantic-ui-react%2fevent-stack",
        "name": "@semantic-ui-react/event-stack",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/artiumsirchenko/Desktop/coding/learning/school_projects/react/react-express-boilerplate/node_modules/semantic-ui-react"
    ]
  ],
  "_from": "@semantic-ui-react/event-stack@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "@semantic-ui-react/event-stack@2.0.0",
  "_location": "/@semantic-ui-react/event-stack",
  "_nodeVersion": "8.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/event-stack_2.0.0_1536667043781_0.4614977478316573"
  },
  "_npmUser": {
    "name": "layershifter",
    "email": "a@fedyashov.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@semantic-ui-react/event-stack@^2.0.0",
    "scope": "@semantic-ui-react",
    "escapedName": "@semantic-ui-react%2fevent-stack",
    "name": "@semantic-ui-react/event-stack",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/semantic-ui-react"
  ],
  "_resolved": "https://registry.npmjs.org/@semantic-ui-react/event-stack/-/event-stack-2.0.0.tgz",
  "_shasum": "d2d568a9fb0ee204b0e40d6b73ac2a2403c08451",
  "_shrinkwrap": null,
  "_spec": "@semantic-ui-react/event-stack@^2.0.0",
  "_where": "/Users/artiumsirchenko/Desktop/coding/learning/school_projects/react/react-express-boilerplate/node_modules/semantic-ui-react",
  "author": {
    "name": "layershifter",
    "email": "alexander.mcgarret@gmail.com"
  },
  "browserslist": [
    ">1%",
    "last 4 versions",
    "Firefox ESR",
    "not ie < 11"
  ],
  "bugs": {
    "url": "https://github.com/layershifter/event-stack/issues"
  },
  "dependencies": {
    "exenv": "^1.2.2",
    "prop-types": "^15.6.2"
  },
  "description": "<!-- Name --> <h1 align=\"center\">Event Stack</h1>",
  "devDependencies": {
    "@babel/core": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-typescript": "^7.0.0",
    "@types/exenv": "^1.2.0",
    "@types/jasmine": "^2.8.8",
    "@types/prop-types": "^15.5.5",
    "@types/react": "^16.4.14",
    "@types/react-test-renderer": "^16.0.2",
    "babel-plugin-istanbul": "^5.0.1",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.15",
    "cross-env": "^5.2.0",
    "husky": "^0.14.3",
    "jasmine-core": "^3.2.1",
    "karma": "^3.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-firefox-launcher": "^1.1.0",
    "karma-ie-launcher": "^1.0.0",
    "karma-jasmine": "^1.1.2",
    "karma-rollup-preprocessor": "^6.0.1",
    "karma-spec-reporter": "^0.0.32",
    "lint-staged": "^7.2.2",
    "prettier": "^1.14.2",
    "react": "^16.5.0",
    "react-dom": "^16.5.0",
    "react-test-renderer": "^16.5.0",
    "release-it": "^7.6.1",
    "rollup": "^0.65.2",
    "rollup-plugin-babel": "^4.0.3",
    "rollup-plugin-commonjs": "^9.1.6",
    "rollup-plugin-node-resolve": "^3.4.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-terser": "^2.0.2",
    "rollup-plugin-typescript2": "^0.17.0",
    "simulant": "^0.2.2",
    "tslint": "^5.11.0",
    "tslint-config-airbnb": "^5.11.0",
    "tslint-config-prettier": "^1.15.0",
    "typescript": "^3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-OLw7l+6sXFp7qJQGIpEktqhkQFOKsM8hto4RSkAkqs1NG/rG2Jb7ct8so7x4qaP3UNJEPUfnrFGuCCz3laLIBQ==",
    "shasum": "d2d568a9fb0ee204b0e40d6b73ac2a2403c08451",
    "tarball": "https://registry.npmjs.org/@semantic-ui-react/event-stack/-/event-stack-2.0.0.tgz",
    "fileCount": 32,
    "unpackedSize": 86724,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl62kCRA9TVsSAnZWagAADVcP/3jmDWX0B8X0T8+H/UHC\nSK23R+PVnG95uFn0JUtrfdaA8x2H1zTg/HMQd4rjZtR2ctGHmP4exFqsUWw4\n3du4GfBu3LuMXMcww0GqJ/I3sef3cOj/hdD/WG7J5PRe3epwVR1f8/xHTrdR\nFrNDZgRqMTf9ZNirl6BnWVSUS48XUBtBYwfjthfnQPvG02knVW+NsqQAnHlK\nUMLtomIU8jX2/Z/5Wd50X5i4UHVHhvXc3KqYsJO4o59ORmMNcBhL1Ied/31Q\nqxeO+IfLbwPb0VVtCbCDFZwb4F/7Day4L65mgviT4XfD+v6YIYwqmBUGObZm\nZAX2uL+xPpltorZLtrX9cMVztRTWXcQPRTSgmmQUkxA/UjhlKhF2VqKyUlkn\n8bIwjpwOu20HtuU9eAw1gtFp43qFRcNZMgxfxpyx8bjXd+9JczV3+0oEEZzK\nJn/0oML8JF9ZFkiudiHw0eHZmTKSho0u0J2IG3WsbHncAwnuJStcipu8hR9P\nSZauaalODO3ezK7AGX1R3fUMqf6AcgHtN1I0rtIPsYPDRYIB3zz+FEezxZ56\nNyOSyw8xABSWT+OAvV+4l3qVT6KZnZQkVi/tARazEn0X9i7PuUfpwiMkG9Vf\nqKFjnn0zFM6vrSJDdqwnyGy2CPKAfMC/up42YPj7Trt52gXOFHIzMAnW35mq\nSbRT\r\n=lreX\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "src",
    "lib"
  ],
  "gitHead": "19c450ebaf5c72546d4ae14e46b09efc6880d641",
  "homepage": "https://github.com/layershifter/event-stack#readme",
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "prettier --write",
      "git add"
    ],
    "*.md": [
      "prettier --write",
      "git add"
    ],
    "*.{ts,tsx}": [
      "prettier --parser typescript --write",
      "tslint --fix",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "layershifter",
      "email": "a@fedyashov.com"
    },
    {
      "name": "levithomason",
      "email": "me@levithomason.com"
    }
  ],
  "name": "@semantic-ui-react/event-stack",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "readme": "<!-- Name -->\n<h1 align=\"center\">Event Stack</h1>\n\n<!-- Badges -->\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@semantic-ui-react/event-stack\">\n    <img alt=\"npm\" src=\"https://img.shields.io/npm/v/@semantic-ui-react/event-stack.svg?style=flat-square\" />\n  </a>\n  <a href=\"https://circleci.com/gh/layershifter/event-stack\">\n    <img alt=\"Circle CI\" src=\"https://img.shields.io/circleci/project/github/layershifter/event-stack/master.svg?logo=circleci&style=flat-square\" />\n  </a>\n  <a href=\"https://ci.appveyor.com/project/layershifter/event-stack\">\n      <img alt=\"AppVeyor CI\" src=\"https://img.shields.io/appveyor/ci/layershifter/event-stack/master.svg?logo=appveyor&style=flat-square\" />\n    </a>\n  <a href=\"https://codecov.io/gh/layershifter/event-stack\">\n    <img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/layershifter/event-stack/master.svg?style=flat-square\" />\n  </a>\n  <a href=\"https://david-dm.org/layershifter/event-stack\">\n    <img alt=\"David\" src=\"https://img.shields.io/david/layershifter/event-stack.svg?style=flat-square\" />\n  </a>\n \n  <img src=\"http://img.badgesize.io/https://unpkg.com/@semantic-ui-react/event-stack/lib/cjs/event-stack.production.js?compression=gzip&label=gzip%20size&style=flat-square\">\n</p>\n\n> A React component for binding events on the global scope.\n\n## Installation\n\n```bash\nyarn add @semantic-ui-react/event-stack\n# or\nnpm install @semantic-ui-react/event-stack\n```\n\n## Why?\n\nThe `EventStack` solves two design problems:\n\n1. Reduces the number of connected listeners to DOM nodes compared to `element.addListener()`.\n2. Respects event ordering. Example, two modals are open and you only want the top modal to close on document click.\n\n## Usage\n\n```jsx\nimport React, { Component } from 'react'\nimport EventStack from '@semantic-ui-react/event-stack'\n\nclass MyComponent extends Component {\n  handleResize = () => {\n    console.log('resize')\n  }\n\n  render() {\n    return (\n      <div>\n        <EventStack on={this.handleResize} target=\"window\" />\n      </div>\n    )\n  }\n}\n```\n\n##### Note on server-side rendering\n\nWhen doing server side rendering, document and window aren't available. You can use a string as a `target`, or check that they exist before rendering the component with [`exenv`](https://github.com/JedWatson/exenv), for example.\n\n##### Note on performance\n\nYou should avoid passing inline functions for listeners, because this creates a new Function instance on every render, defeating `EventListener`'s `shouldComponentUpdate`, and triggering an update cycle where it removes its old listeners and adds its new listeners (so that it can stay up-to-date with the props you passed in).\n\n## Implementation details\n\nThe `EventStack` is a public API that allows subscribing a DOM node to events. The event subscription for\neach unique DOM node creates a new `EventTarget` object.\n\n```\n+------------+          +-------------+\n|            |   0..*   |             |\n| EventStack | +------> | EventTarget |\n|            |          |             |\n+------------+          +-------------+\n```\n\n## EventTarget\n\nEach `EventTarget` is assigned to an unique DOM node. An `EventTarget` tracks event handlers for\nthe target's DOM node. Making multiple subscriptions to a `click` event for a single DOM node will\nresult in a single registered `handler` for that DOM node. An `EventPool` also handles `EventPool`\nrelations, it stores only unique pools.\n\n```\n+-------------+          +---------+\n|             |   0..*   |         |\n| EventTarget | +------> | handler |\n|             |          |         |\n+-------------+          +---------+\n\n      +                  +-----------+\n      |           0..*   |           |\n      +----------------> | EventPool |\n                         |           |\n                         +-----------+\n```\n\nA `handler` is a generated function that will notify the corresponding subscribed `EventPool`.\n\n## EventPool & EventSet\n\nAn `EventPool` notifies its `EventSet`, while an `EventSet` stores a set of subscribed\nevent handlers. An `EventSet` is also responsible for event ordering and dispatching to\nsubscribed handlers.\n\n```\n+-----------+       +----------+\n|           |   1   |          |\n| EventPool | +---> | EventSet |\n|           |       |          |\n+-----------+       +----------+\n```\n\n#### Credits\n\nThe idea of a React component is taken from [`react-event-listener`](https://www.npmjs.com/package/react-event-listener).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/layershifter/event-stack.git"
  },
  "scripts": {
    "build": "node build.js",
    "lint": "tslint \"./src/**/*.{ts,tsx}\" \"./test/**/*.{ts,tsx}\"",
    "postcommit": "git update-index --again",
    "precommit": "lint-staged",
    "prerelease": "yarn lint && yarn test --browsers ChromeHeadless && yarn build",
    "release:major": "yarn prerelease && release-it major",
    "release:minor": "yarn prerelease && release-it minor",
    "release:patch": "yarn prerelease && release-it patch",
    "test": "cross-env NODE_ENV=test karma start karma.conf.js",
    "test:ci:circle": "yarn test --browsers ChromeHeadless,Firefox",
    "test:ci:veyor": "yarn test --browsers IE",
    "test:watch": "yarn test --browsers ChromeHeadless --no-single-run"
  },
  "types": "lib/types/index.d.ts",
  "version": "2.0.0"
}
